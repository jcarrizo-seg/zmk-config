#include <dt-bindings/zmk/matrix_transform.h>

/ {
    chosen {
        zmk,kscan = &mock_kscan;
        zmk,matrix_transform = &default_transform;
    };

    // Mock kscan since dongle has no keys
    mock_kscan: mock_kscan_0 {
        compatible = "zmk,kscan-mock";
        columns = <0>;
        rows = <0>;
        events = <0>;
    };

    // Matrix transform para el dongle (mapea ambos lados)
    default_transform: keymap_transform_0 {
        compatible = "zmk,matrix-transform";
        columns = <8>;
        rows = <5>;  // 5 filas para incluir encoder click en RC(4,0)
        map = <
            RC(0,0) RC(0,1) RC(0,2) RC(0,3)    RC(0,4) RC(0,5) RC(0,6) RC(0,7)
            RC(1,0) RC(1,1) RC(1,2) RC(1,3)    RC(1,4) RC(1,5) RC(1,6) RC(1,7)
            RC(2,0) RC(2,1) RC(2,2) RC(2,3)    RC(2,4) RC(2,5) RC(2,6) RC(2,7)
            RC(3,0) RC(3,1) RC(3,2) RC(3,3)    RC(3,4) RC(3,5) RC(3,6) RC(3,7)
            RC(4,0)                            RC(4,4)
        >;
    };

    // Sensores para recibir datos de encoders de ambos lados
    sensors {
        compatible = "zmk,keymap-sensors";
        sensors = <&encoder_sensor_left &encoder_sensor_right>;
        triggers-per-rotation = <1200>;
    };

    // Behaviors dummy para los sensores virtuales
    dummy_behavior: dummy_behavior {
        compatible = "zmk,behavior-none";
        #binding-cells = <0>;
    };

    // Sensores virtuales que reciben datos de los perif√©ricos
    encoder_sensor_left: encoder_sensor_left {
        compatible = "zmk,behavior-sensor-rotate-var";
        #sensor-binding-cells = <2>;
        bindings = <&dummy_behavior>, <&dummy_behavior>;
    };

    encoder_sensor_right: encoder_sensor_right {
        compatible = "zmk,behavior-sensor-rotate-var";
        #sensor-binding-cells = <2>;
        bindings = <&dummy_behavior>, <&dummy_behavior>;
    };
};